%!
%%BoundingBox: 10 537 435 804
%%Title: lowlib
%%CreationDate: Wed Mar 29 21:28:33 1995
%%Creator: Tgif-2.13J2-p2 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%Pages: 1
%%DocumentFonts: Times-Roman Helvetica Courier NewCenturySchlbk Symbol
%%EndComments
%%BeginProlog
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

%%Title: eucfont.ps
%%Creator: shikida@cs.titech.ac.jp, ueno@cs.titech.ac.jp
%%CreationDate: 1991-2-27
%%EndComments

% <font> copyfont <font>
/copyfont {
    dup maxlength 1 add dict begin
    {
	1 index /FID ne 2 index /UniqueID ne and
	{def} {pop pop} ifelse
    } forall
    currentdict
    end
} bind def

% <newfont> <asciifont> <kanjifont> eucfont
/eucfont {
    12 dict begin
	dup type /nametype eq { findfont } if
	dup /WMode known {
	    dup /WMode get /WMode exch def
	    WMode 1 eq {
		[0.0 1.0 -1.0 0.0 0.0 0.3] makefont
	    } if
	} if
	copyfont dup begin
	    /Encoding Encoding
	    FMapType dup 2 eq {
		pop 128 128
	    } { 5 eq {
		256 256
	    } {
		/compositefont errordict /invalidfont get exec
	    } ifelse
	    } ifelse
	    getinterval def
	end
	/kanjifont exch definefont
	exch

	dup type /nametype eq { findfont } if
	exch

	/FDepVector [ 4 2 roll ] def
	/FontType 0 def
	/FMapType 4 def
	/FontMatrix matrix def
	/Encoding [ 0 1 ] def
	/FontBBox {0 0 0 0} def
	dup /FontName exch def
	currentdict
    end
    definefont pop
} def

end

%%EndProlog
%%Page: 1 1

%%PageBoundingBox: 10 537 435 804
tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11.7 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H /Courier /Ryumin-Light-EUC-H eucfont
/Courier-Ryumin-Light-EUC-H findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      152 168 moveto (\245\242\245\327\245\352\245\261\241\274\245\267\245\347\245\363) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 200 moveto
      32 0 atan dup cos 10 mul 192 exch sub
      exch sin 10 mul 232 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      192 232 10 4 0 32 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      584 168 moveto (\245\336\245\315\241\274\245\270\245\343) show
   grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      208 219 moveto (BTRON\245\267\245\271\245\306\245\340\245\263\241\274\245\353) show
   grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      200 395 moveto (ITRON\245\267\245\271\245\306\245\340\245\263\241\274\245\353) show
   grestore

% RCBOX
gsave
   3 setlinewidth
   newpath
      304 128 moveto
      320 128 320 192 16 arcto 4 {pop} repeat
      320 176 lineto
      320 192 128 192 16 arcto 4 {pop} repeat
      144 192 lineto
      128 192 128 128 16 arcto 4 {pop} repeat
      128 144 lineto
      128 128 320 128 16 arcto 4 {pop} repeat
   closepath stroke
   1 setlinewidth
grestore

% POLYGON/CLOSED-SPLINE
gsave
   pat5 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      64 152 moveto
      96 152 lineto
      96 240 lineto
      352 240 lineto
      352 152 lineto
      384 152 lineto
      384 280 lineto
      64 280 lineto
   closepath eofill
grestore
gsave
   newpath
   64 152 moveto
      96 152 lineto
      96 240 lineto
      352 240 lineto
      352 152 lineto
      384 152 lineto
      384 280 lineto
      64 280 lineto
   closepath stroke
grestore

% RCBOX
gsave
   6 setlinewidth
   pat7 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      408 96 moveto
      424 96 424 304 16 arcto 4 {pop} repeat
      424 288 lineto
      424 304 24 304 16 arcto 4 {pop} repeat
      40 304 lineto
      24 304 24 96 16 arcto 4 {pop} repeat
      24 112 lineto
      24 96 424 96 16 arcto 4 {pop} repeat
   closepath stroke
   1 setlinewidth
grestore

% RCBOX
gsave
   3 setlinewidth
   newpath
      712 128 moveto
      728 128 728 192 16 arcto 4 {pop} repeat
      728 176 lineto
      728 192 536 192 16 arcto 4 {pop} repeat
      552 192 lineto
      536 192 536 128 16 arcto 4 {pop} repeat
      536 144 lineto
      536 128 728 128 16 arcto 4 {pop} repeat
   closepath stroke
   1 setlinewidth
grestore

% RCBOX
gsave
   7 setlinewidth
   pat5 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      752 416 moveto
      768 416 768 536 16 arcto 4 {pop} repeat
      768 520 lineto
      768 536 32 536 16 arcto 4 {pop} repeat
      48 536 lineto
      32 536 32 416 16 arcto 4 {pop} repeat
      32 432 lineto
      32 416 768 416 16 arcto 4 {pop} repeat
   closepath stroke
   1 setlinewidth
grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      328 488 moveto (ITRON\(\303\346\277\264\263\313\)) show
   grestore

% POLY/OPEN-SPLINE
gsave
   2 setlinewidth
   newpath
      192 288 moveto
      192.00 368.00 192.00 410.67 192.00 416.00 curveto
      192.00 421.33 193.17 426.67 195.50 432.00 curveto
      197.83 437.33 201.33 441.33 206.00 444.00 curveto
      210.67 446.67 215.33 448.00 220.00 448.00 curveto
      224.67 448.00 288.67 448.00 412.00 448.00 curveto
      535.33 448.00 598.17 448.00 600.50 448.00 curveto
      602.83 448.00 607.50 446.67 614.50 444.00 curveto
      621.50 441.33 626.17 436.00 628.50 428.00 curveto
      630.83 420.00 632.00 412.00 632.00 404.00 curveto
      632.00 396.00 632.00 328.00
      -192 0 atan dup cos 10 mul 632 exch sub
      exch sin 10 mul 200 exch sub curveto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      632 200 10 4 0 -192 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
newpath
   190 254 moveto 259 254 lineto 259 277 lineto 190 277 lineto
closepath 1 setgray fill
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      192 272 moveto (LOWLIB) show
   grestore

% TEXT
0 setgray
/Courier-GothicBBB-Medium-EUC-H /Courier /GothicBBB-Medium-EUC-H eucfont
/Courier-GothicBBB-Medium-EUC-H findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      24 85 moveto (\243\302\243\324\243\322\243\317\243\316\264\304\266\255) show
   grestore

grestore
tgifsavedpage restore
end
%%Trailer
%MatchingCreationDate: Wed Mar 29 21:28:33 1995
%%EOF
