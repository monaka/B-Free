%!
%%BoundingBox: 51 421 520 758
%%Title: task-with-posix
%%CreationDate: Mon Mar 27 01:32:02 1995
%%Creator: Tgif-2.13J2-p2 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%Pages: 1
%%DocumentFonts: Times-Roman Helvetica Courier NewCenturySchlbk Symbol
%%EndComments
%%BeginProlog
%
%	Due to bugs in Transcript, the 'PS-Adobe-' stuff is omitted from line 1
%

/tgifdict 132 dict def
tgifdict begin

%
%	Using a zero value radius for an ellipse or an arc would result
%		in a non-invertible CTM matrix which causes problem when this
%		when this PostScript is wrapped inside other routines, such as
%		the multi.ps package from
%		ftp.ucc.su.oz.au:/pub/ps_printing/multi.  You can overcome such
%		error by uncommenting the sole line of the procedure below:
%
/tgif_min_radius
 {
%    dup 0.01 lt { pop 0.01 } if
 } bind def

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/tgifarcdict 8 dict def
tgifarcdict /mtrx matrix put

/tgifarcn
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arc
      savematrix setmatrix
   end
 } def

/tgifarc
 { tgifarcdict begin
      /endangle exch def
      /startangle exch def
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 startangle endangle arcn
      savematrix setmatrix
   end
 } def

/tgifsetuserscreendict 22 dict def
tgifsetuserscreendict begin
   /tempctm matrix def
   /temprot matrix def
   /tempscale matrix def

   /concatprocs
    { /proc2 exch cvlit def
      /proc1 exch cvlit def
      /newproc proc1 length proc2 length add array def
      newproc 0 proc1 putinterval
      newproc proc1 length proc2 putinterval
      newproc cvx
    } def
   /resmatrix matrix def
   /findresolution
    { 72 0 resmatrix defaultmatrix dtransform
      /yres exch def /xres exch def
      xres dup mul yres dup mul add sqrt
    } def
end

/tgifsetuserscreen
 { tgifsetuserscreendict begin
      /spotfunction exch def
      /screenangle exch def
      /cellsize exch def

      /m tempctm currentmatrix def
      /rm screenangle temprot rotate def
      /sm cellsize dup tempscale scale def

      sm rm m m concatmatrix m concatmatrix pop

      1 0 m dtransform /y1 exch def /x1 exch def

      /veclength x1 dup mul y1 dup mul add sqrt def
      /frequency findresolution veclength div def

      /newscreenangle y1 x1 atan def

      m 2 get m 1 get mul m 0 get m 3 get mul sub 0 gt

      {{neg} /spotfunction load concatprocs
         /spotfunction exch def
      } if

      frequency newscreenangle /spotfunction load setscreen
   end
 } def

/tgifsetpatterndict 18 dict def
tgifsetpatterndict begin
   /bitison
    { /ybit exch def /xbit exch def
      /bytevalue bstring ybit bwidth mul xbit 8 idiv add get def

      /mask 1 7 xbit 8 mod sub bitshift def
      bytevalue mask and 0 ne
    } def
end

/tgifbitpatternspotfunction
 { tgifsetpatterndict begin
      /y exch def /x exch def

      /xindex x 1 add 2 div bpside mul cvi def
      /yindex y 1 add 2 div bpside mul cvi def

      xindex yindex bitison
       { /onbits onbits 1 add def 1 }
       { /offbits offbits 1 add def 0 }
       ifelse
   end
 } def

/tgifsetpattern
 { tgifsetpatterndict begin
      /cellsz exch def
      /angle exch def
      /bwidth exch def
      /bpside exch def
      /bstring exch def

      /onbits 0 def /offbits 0 def
      cellsz angle /tgifbitpatternspotfunction load tgifsetuserscreen
      {} settransfer
      offbits offbits onbits add div setgray
   end
 } def

/tgifxpmdict 4 dict def
/tgifbwpicstr 1 string def
/tgifcolorpicstr 3 string def

/tgifsetpixels { tgifxpmdict begin /pixels exch def end } def

/tgifsetpix { tgifxpmdict begin pixels 3 1 roll putinterval end } def

/tgifbwspot
 { tgifxpmdict begin
      /index exch def
      tgifbwpicstr 0
      pixels index 3 mul 3 getinterval aload pop
      255 mul .114 mul exch 255 mul .587 mul add exch 255 mul .299 mul add
      cvi put
      tgifbwpicstr
   end
 } def

/tgifcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop
      255 mul cvi tgifcolorpicstr 2 3 -1 roll put
      255 mul cvi tgifcolorpicstr 1 3 -1 roll put
      255 mul cvi tgifcolorpicstr 0 3 -1 roll put
      tgifcolorpicstr
   end
 } def

/tgifnewcolorspot
 { tgifxpmdict begin
      /index exch def
      pixels index 3 mul 3 getinterval aload pop setrgbcolor
   end
 } def

/tgifcolordict 4 dict def

/colorimage where
 { pop }
 { /colorimage
   { tgifcolordict begin
        pop pop pop pop pop
        /ih exch def
        /iw exch def
        /x 0 def
        /y 0 def
        1 1 ih
         { pop 1 1 iw
            { pop currentfile
              tgifbwpicstr readhexstring pop 0 get tgifnewcolorspot
              x y moveto 1 0 rlineto 0 1 rlineto -1 0 rlineto
              closepath fill
              /x x 1 add def
            } for
           /y y 1 add def
           /x 0 def
         } for
     end
   } def
 } ifelse

/tgifpatdict 10 dict def

/tgifpatbyte
 { currentdict /retstr get exch
   pat i cellsz mod get put
 } def

/tgifpatproc
 { 0 1 widthlim {tgifpatbyte} for retstr
   /i i 1 add def
 } def

/tgifpatfill
 { tgifpatdict begin
      /h exch def
      /w exch def
      /lty exch def
      /ltx exch def
      /cellsz exch def
      /pat exch def

      /widthlim w cellsz div cvi 1 sub def
      /retstr widthlim 1 add string def
      /i 0 def

      ltx lty translate
      w h true [1 0 0 1 0 0] {tgifpatproc} imagemask
      ltx neg lty neg translate
   end
 } def

/pat1 <ffffffffffffffff> def
/pat2 <0000000000000000> def
/pat3 <8000000008000000> def
/pat4 <8800000022000000> def
/pat5 <8800220088002200> def
/pat6 <8822882288228822> def
/pat7 <aa55aa55aa55aa55> def
/pat8 <77dd77dd77dd77dd> def
/pat9 <77ffddff77ffddff> def
/pat10 <77ffffff77ffffff> def
/pat11 <7fffffff7fffffff> def
/pat12 <8040200002040800> def
/pat13 <40a00000040a0000> def
/pat14 <ff888888ff888888> def
/pat15 <ff808080ff080808> def
/pat16 <f87422478f172271> def
/pat17 <038448300c020101> def
/pat18 <081c22c180010204> def
/pat19 <8080413e080814e3> def
/pat20 <8040201008040201> def
/pat21 <8844221188442211> def
/pat22 <77bbddee77bbddee> def
/pat23 <c1e070381c0e0783> def
/pat24 <7fbfdfeff7fbfdfe> def
/pat25 <3e1f8fc7e3f1f87c> def
/pat26 <0102040810204080> def
/pat27 <1122448811224488> def
/pat28 <eeddbb77eeddbb77> def
/pat29 <83070e1c3870e0c1> def
/pat30 <fefdfbf7efdfbf7f> def
/pat31 <7cf8f1e3c78f1f3e> def

/tgifcentertext { dup stringwidth pop 2 div neg 0 rmoveto } def

/tgifrighttext { dup stringwidth pop neg 0 rmoveto } def

/tgifreencsmalldict 12 dict def
/tgifReEncodeSmall
 { tgifreencsmalldict begin
      /newcodesandnames exch def
      /newfontname exch def
      /basefontname exch def

      /basefontdict basefontname findfont def
      /newfont basefontdict maxlength dict def

      basefontdict
      { exch dup /FID ne
         { dup /Encoding eq
            { exch dup length array copy newfont 3 1 roll put }
            { exch newfont 3 1 roll put }
            ifelse
         }
         { pop pop }
         ifelse
      }
      forall

      newfont /FontName newfontname put
      newcodesandnames aload pop

      newcodesandnames length 2 idiv
      { newfont /Encoding get 3 1 roll put}
      repeat

      newfontname newfont definefont pop
   end
 } def

/tgifgray { 8 1 0 72 300 32 div div tgifsetpattern } bind def

/tgifboxdict 6 dict def
/tgifboxstroke
 { tgifboxdict begin
      /pat def /w def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      1.415 setmiterlimit
      w 1 eq { w setlinewidth } if
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray stroke 0 setgray } { stroke } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
      w 1 eq { 1 setlinewidth } if
      1 setmiterlimit
   end
 } def
/tgifboxfill
 { tgifboxdict begin
      /pat def /y2 exch def /x2 exch def /y1 exch def /x1 exch def
      pat pat1 ne pat pat2 ne and { gsave pat tgifgray } if
      newpath x1 y1 moveto x2 y1 lineto x2 y2 lineto x1 y2 lineto closepath
      pat pat2 eq { 1 setgray fill 0 setgray } { fill } ifelse
      pat pat1 ne pat pat2 ne and { grestore } if
   end
 } def

%%Title: eucfont.ps
%%Creator: shikida@cs.titech.ac.jp, ueno@cs.titech.ac.jp
%%CreationDate: 1991-2-27
%%EndComments

% <font> copyfont <font>
/copyfont {
    dup maxlength 1 add dict begin
    {
	1 index /FID ne 2 index /UniqueID ne and
	{def} {pop pop} ifelse
    } forall
    currentdict
    end
} bind def

% <newfont> <asciifont> <kanjifont> eucfont
/eucfont {
    12 dict begin
	dup type /nametype eq { findfont } if
	dup /WMode known {
	    dup /WMode get /WMode exch def
	    WMode 1 eq {
		[0.0 1.0 -1.0 0.0 0.0 0.3] makefont
	    } if
	} if
	copyfont dup begin
	    /Encoding Encoding
	    FMapType dup 2 eq {
		pop 128 128
	    } { 5 eq {
		256 256
	    } {
		/compositefont errordict /invalidfont get exec
	    } ifelse
	    } ifelse
	    getinterval def
	end
	/kanjifont exch definefont
	exch

	dup type /nametype eq { findfont } if
	exch

	/FDepVector [ 4 2 roll ] def
	/FontType 0 def
	/FMapType 4 def
	/FontMatrix matrix def
	/Encoding [ 0 1 ] def
	/FontBBox {0 0 0 0} def
	dup /FontName exch def
	currentdict
    end
    definefont pop
} def

end

%%EndProlog
%%Page: 1 1

%%PageBoundingBox: 51 421 520 758
tgifdict begin
/tgifsavedpage save def

1 setmiterlimit
1 setlinewidth

72 0 mul 72 11.7 mul translate
72 128 div 100 mul 100 div dup neg scale

gsave

% POLYGON/CLOSED-SPLINE
gsave
   pat6 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      132 528 moveto
      196 656 lineto
      836 656 lineto
      708 528 lineto
   closepath eofill
grestore
gsave
   newpath
   132 528 moveto
      196 656 lineto
      836 656 lineto
      708 528 lineto
   closepath stroke
grestore

% TEXT
0 setgray
newpath
   450 582 moveto 507 582 lineto 507 605 lineto 450 605 lineto
closepath 1 setgray fill
0 setgray
/Courier-GothicBBB-Medium-EUC-H /Courier /GothicBBB-Medium-EUC-H eucfont
/Courier-GothicBBB-Medium-EUC-H findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      452 600 moveto (\303\346\277\264\263\313) show
   grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   [4 12] 0 setdash
   newpath
      468 416 moveto
      32 0 atan dup cos 12 mul exch sin 12 mul rmoveto
      468.00 437.33 468.00 449.33 468.00 452.00 curveto
      468.00 454.67 468.67 458.67 470.00 464.00 curveto
      471.33 469.33 474.00 475.33 478.00 482.00 curveto
      482.00 488.67 557.33 564.00
      704 708 curveto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore
gsave
   newpath
      468 416 12 5 0 -32 tgifarrowtip
   closepath fill
grestore

% POLYGON/CLOSED-SPLINE
gsave
   pat3 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      128 192 moveto
      192 320 lineto
      832 320 lineto
      704 192 lineto
   closepath eofill
grestore
gsave
   newpath
   128 192 moveto
      192 320 lineto
      832 320 lineto
      704 192 lineto
   closepath stroke
grestore

% POLYGON/CLOSED-SPLINE
gsave
   pat4 8 1 0 72 300 32 div div tgifsetpattern
   newpath
      128 384 moveto
      192 512 lineto
      832 512 lineto
      704 384 lineto
   closepath eofill
grestore
gsave
   newpath
   128 384 moveto
      192 512 lineto
      832 512 lineto
      704 384 lineto
   closepath stroke
grestore

% OVAL
newpath 284 184 76 24 tgifellipse fill
gsave
   newpath 284 184 76 24 tgifellipse stroke
grestore

% OVAL
newpath 284 176 76 24 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 284 176 76 24 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      112 192 moveto
      192 0 atan dup cos 8 mul exch sin 8 mul rmoveto
      192 0 atan dup cos 8 mul 112 exch sub
      exch sin 8 mul 384 exch sub lineto
   stroke
grestore
gsave
   newpath
      112 192 8 3 0 -192 tgifarrowtip
   closepath fill
grestore
gsave
   newpath
      112 384 8 3 0 192 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      280 208 moveto
      280 256 lineto
   stroke
   1 setlinewidth
grestore

% POLY/OPEN-SPLINE
newpath
   192 352 moveto
   328 352 lineto
   384 424 lineto
   232 424 lineto
   192 352 lineto
closepath 1 setgray eofill
0 setgray
gsave
   newpath
      192 352 moveto
      328 352 lineto
      384 424 lineto
      232 424 lineto
      192 352 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   newpath
      280 320 moveto
      56 0 atan dup cos 12 mul 280 exch sub
      exch sin 12 mul 376 exch sub lineto
   stroke
   1 setlinewidth
grestore
gsave
   newpath
      280 376 12 5 0 56 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      208 368 moveto
      336 368 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      216 384 moveto
      344 384 lineto
   stroke
grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H /Courier /Ryumin-Light-EUC-H eucfont
/Courier-Ryumin-Light-EUC-H findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      107 328 moveto 270 rotate (\243\314\243\317\243\327\243\314\243\311\243\302\301\330) show
      -270 rotate 
   grestore

% OVAL
newpath 652 399 52 17 tgifellipse fill
gsave
   newpath 652 399 52 17 tgifellipse stroke
grestore

% OVAL
newpath 652 393 52 17 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 652 393 52 17 tgifellipse stroke
grestore

% OVAL
newpath 476 379 52 17 tgifellipse fill
gsave
   newpath 476 379 52 17 tgifellipse stroke
grestore

% OVAL
newpath 476 373 52 17 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 476 373 52 17 tgifellipse stroke
grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [18 0 0 -18 0 0] makefont setfont
   gsave
      248 184 moveto (\274\347\245\277\245\271\245\257) show
   grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      228 403 moveto (\245\267\245\271\245\306\245\340\245\263\241\274\245\353\245\250\245\363\245\310\245\352) show
   grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      432 377 moveto (\245\267\245\260\245\312\245\353\274\365\277\256\245\277\245\271\245\257) show
   grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [11 0 0 -11 0 0] makefont setfont
   gsave
      620 394 moveto (IPC \315\321\245\277\245\271\245\257) show
   grestore

% TEXT
0 setgray
/Helvetica-GothicBBB-Medium-EUC-H /Helvetica /GothicBBB-Medium-EUC-H eucfont
/Helvetica-GothicBBB-Medium-EUC-H findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      356 718 moveto (POSIX/\245\336\245\315\241\274\245\270\245\343\267\262\244\330\(\245\341\245\303\245\273\241\274\245\270\)) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      472 364 moveto
      472 320 lineto
   stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      472 276 moveto
      472.00 249.33 445.33 236.00 392.00 236.00 curveto
      338.67 236.00 312.00 226.67
      -28 0 atan dup cos 8 mul 312 exch sub
      exch sin 8 mul 208 exch sub curveto
   stroke
grestore
gsave
   newpath
      312 208 8 3 0 -28 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
/Courier-GothicBBB-Medium-EUC-H findfont [14 0 0 -14 0 0] makefont setfont
   gsave
      672 741 moveto (POSIX/\245\336\245\315\241\274\245\270\245\343\267\262\244\253\244\351\244\316\245\341\245\303\245\273\241\274\245\270) show
   grestore

% TEXT
0 setgray
newpath
   218 438 moveto 275 438 lineto 275 456 lineto 218 456 lineto
closepath 1 setgray fill
0 setgray
/Helvetica-Ryumin-Light-EUC-H /Helvetica /Ryumin-Light-EUC-H eucfont
/Helvetica-Ryumin-Light-EUC-H findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      220 452 moveto (snd_mbf\(\)) show
   grestore

% OVAL
newpath 286 448 14 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 286 448 14 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      284 424 moveto
      284 448 lineto
   stroke
grestore

% OVAL
newpath 474 436 14 4 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 474 436 14 4 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   [8 8] 0 setdash
   newpath
      472 392 moveto
      44 0 atan dup cos 12 mul exch sin 12 mul rmoveto
      472 436 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore
gsave
   newpath
      472 392 12 5 0 -44 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 602 497 14 3 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 602 497 14 3 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   [8 8] 0 setdash
   newpath
      600 464 moveto
      33 0 atan dup cos 12 mul exch sin 12 mul rmoveto
      600 497 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore
gsave
   newpath
      600 464 12 5 0 -33 tgifarrowtip
   closepath fill
grestore

% TEXT
0 setgray
newpath
   490 414 moveto 553 414 lineto 553 428 lineto 490 428 lineto
closepath 1 setgray fill
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [10 0 0 -10 0 0] makefont setfont
   gsave
      492 425 moveto (\245\267\245\260\245\312\245\353\301\367\277\256) show
   grestore

% POLY/OPEN-SPLINE
gsave
   newpath
      564 424 moveto
      -28 -56 atan dup cos 8 mul 508 exch sub
      exch sin 8 mul 396 exch sub lineto
   stroke
grestore
gsave
   newpath
      508 396 8 3 -56 -28 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 658 449 14 3 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 658 449 14 3 tgifellipse stroke
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   [8 8] 0 setdash
   newpath
      656 416 moveto
      33 0 atan dup cos 12 mul exch sin 12 mul rmoveto
      656 449 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore
gsave
   newpath
      656 416 12 5 0 -33 tgifarrowtip
   closepath fill
grestore

% OVAL
newpath 600 447 52 17 tgifellipse fill
gsave
   newpath 600 447 52 17 tgifellipse stroke
grestore

% OVAL
newpath 600 441 52 17 tgifellipse
closepath 1 setgray fill
0 setgray
gsave
   newpath 600 441 52 17 tgifellipse stroke
grestore

% TEXT
0 setgray
/Courier-Ryumin-Light-EUC-H findfont [12 0 0 -12 0 0] makefont setfont
   gsave
      560 443 moveto (alarm \245\277\245\271\245\257) show
   grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   [8 8] 0 setdash
   newpath
      284 520 moveto
      284.00 541.33 284.00 550.00 284.00 546.00 curveto
      284.00 542.00 284.67 545.33 286.00 556.00 curveto
      287.33 566.67 292.67 578.00 302.00 590.00 curveto
      311.33 602.00 344.00 634.67
      80 84 atan dup cos 12 mul 400 exch sub
      exch sin 12 mul 688 exch sub curveto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore
gsave
   newpath
      400 688 12 5 84 80 tgifarrowtip
   closepath fill
grestore

% POLY/OPEN-SPLINE
gsave
   3 setlinewidth
   [8 8] 0 setdash
   newpath
      600 512 moveto
      600 545 lineto
   stroke
   [] 0 setdash
   1 setlinewidth
grestore

grestore
tgifsavedpage restore
end
%%Trailer
%MatchingCreationDate: Mon Mar 27 01:32:02 1995
%%EOF
